import kotlinx.kover.gradle.plugin.dsl.CoverageUnit
import kotlinx.kover.gradle.plugin.dsl.AggregationType

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.2.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.22' apply false
    id 'org.jetbrains.kotlinx.kover' version '0.8.1'
}

dependencies {
    kover(project(":app"))
    kover(project(":calculator"))
    kover(project(":randomimages"))
}

//apply from: "$rootDir/kover.gradle"

kover {
    reports {
        filters.excludes {
            classes(
                    '**/BR$*.class',
                    '**/BR.class',
                    '**/DataBinderMapperImpl.*',
                    '**/DataBinderMapperImpl*.*',
                    '**/databinding/**',
                    "*.databinding.*",
                    '**/databinding',
                    '**/*BindingImpl.class'
            )
        }

        verify {
            rule {
                // specify verification bound for this rule
                bound {
                    // lower bound
                    minValue = 50

                    // specify which units to measure coverage for
                    coverageUnits = CoverageUnit.LINE

                    // specify an aggregating function to obtain a single value that will be checked against the lower and upper boundaries
                    aggregationForGroup = AggregationType.COVERED_PERCENTAGE
                }
            }
        }
    }
}